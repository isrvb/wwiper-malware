import os
import random
import string
import shutil

def confirm_action(prompt):
    while True:
        response = input(f"{prompt} (s/n): ").lower()
        if response == 's':
            return True
        elif response == 'n':
            return False
        else:
            print("Por favor, ingresa 's' para sí o 'n' para no.")

def wiper_simulation(path):
    try:
        if os.path.isfile(path):
            # Tamaño del archivo
            file_size = os.path.getsize(path)

            # Patrón 1: Datos aleatorios
            with open(path, 'wb') as file:
                random_data = os.urandom(file_size)
                file.write(random_data)

            # Patrón 2: Caracteres ASCII aleatorios
            with open(path, 'w') as file:
                random_ascii = ''.join(random.choice(string.ascii_letters + string.digits) for _ in range(file_size))
                file.write(random_ascii)

            # Patrón 3: Patrón específico
            with open(path, 'wb') as file:
                pattern = bytes([0xFF, 0x00, 0xAA, 0x55])  # Patrón específico
                for _ in range(file_size // len(pattern)):
                    file.write(pattern)

            print(f"Se ha realizado una eliminación segura del contenido del archivo '{path}'.")
        elif os.path.isdir(path):
            confirm = confirm_action(f"ADVERTENCIA: Estás a punto de borrar el contenido de la carpeta '{path}'. ¿Deseas continuar? (s/n): ")
            if confirm:
                shutil.rmtree(path)
                print(f"Se ha realizado una eliminación segura del contenido de la carpeta '{path}'.")
            else:
                print("Operación cancelada.")
        else:
            print(f"Ruta inválida o no encontrada: '{path}'.")
    except Exception as e:
        print(f"Ha ocurrido un error al borrar '{path}': {str(e)}")

def main():
    path = input("Ingresa la ruta del archivo o carpeta que deseas borrar de forma segura (proporciona la ruta completa): ")

    if os.path.exists(path):
        wiper_simulation(path)
    else:
        print(f"Ruta no encontrada: '{path}'.")

if __name__ == "__main__":
    main()
